.wrapper {
  box-sizing: border-box;
  max-width: $wrapper-width;
  margin: 0 auto;
}

.container-fluid {
  margin-right: auto;
  margin-left: auto;
  padding-right: $outer-margin;
  padding-left: $outer-margin;
}

.row {
  box-sizing: border-box;
  display: flex;
  flex: 0 1 auto;
  flex-direction: row;
  flex-wrap: wrap;
  margin-right: -$gutter-width / 2;
  margin-left: -$gutter-width / 2;
}

$name: xs;
[class*="col-#{$name}"] {
  box-sizing: border-box;
  flex: 0 0 auto;
  padding-right: $gutter-width / 2;
  padding-left: $gutter-width / 2;
}
@for $i from 1 through $grid-columns {
  .col-#{$name}-#{$i} {
    flex-basis: (100% / $grid-columns * $i);
    max-width: (100% / $grid-columns * $i);
  }
}
@for $i from 1 through $grid-columns {
  .col-#{$name}-offset-#{$i} {
    margin-left: (100% / $grid-columns * $i);
  }
}
.col-#{$name} {
  flex-grow: 1;
  flex-basis: 0;
  max-width: 100%;
}


@each $breakpoint in $breakpoints {
  $name: nth($breakpoint, 1);
  $size: nth($breakpoint, 2);
  $container: nth($breakpoint, 3);
  @media only screen and (min-width: $size) {
    .container {
      width: $container;
    }

    [class*="col-#{$name}"] {
      box-sizing: border-box;
      flex: 0 0 auto;
      padding-right: $gutter-width / 2;
      padding-left: $gutter-width / 2;
    }
    @for $i from 1 through $grid-columns {
      .col-#{$name}-#{$i} {
        flex-basis: (100% / $grid-columns * $i);
        max-width: 100% / $grid-columns * $i;
      }
    }
    @for $i from 1 through $grid-columns {
      .col-#{$name}-offset-#{$i} {
        margin-left: 100% / $grid-columns * $i
      }
    }
    .col-#{$name} {
      flex-grow: 1;
      flex-basis: 0;
      max-width: 100%;
    }
  }
}